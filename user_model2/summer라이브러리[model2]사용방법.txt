이 작업으로 인해 common, filter 패키지 다 필요없다. 모델1이랑 비교해봐라.

A.라이브러리다운로드후 summar.jar context/WEB-INF/lib 폴더에위치시킨다.(summer.jar)

B. /WEB-INF/user_controller_mapping.properties 파일생성

C.모든클라이언트요청(*.do)을 실행하도록  web.xml설정

B.contoller설정파일위치파라메타등록
	  <servlet>
	  	<servlet-name>dispatcher</servlet-name>
	  	<servlet-class>com.itwill.summer.DispatcherServlet</servlet-class>
	  	<init-param>
			<param-name>configFile</param-name>
			<param-value>/WEB-INF/user_controller_mapping.properties</param-value>
		</init-param>
	  	<load-on-startup>0</load-on-startup>
	  </servlet>
	  <servlet-mapping>
	  	<servlet-name>dispatcher</servlet-name>
	  	<url-pattern>*.do</url-pattern>
	  </servlet-mapping>
	  
C.인코딩필터클래스설정  web.xml설정	  

		<filter>
			<filter-name>encoding filter</filter-name>
			<filter-class>com.itwill.summer.filter.EncodingFilter</filter-class>
			<init-param>
				<param-name>encoding</param-name>
				<param-value>UTF-8</param-value>
			</init-param>
		</filter>
		<filter-mapping>
			<filter-name>encoding filter</filter-name>
			<url-pattern>/*</url-pattern>
		</filter-mapping>

D. /WEB-INF/user_controller_mapping.properties 파일생성

그리고 EFG EFG EFG 이렇게 계속 반복		
(디스패쳐 서블릿이 .do 주소를 받아서 Controller를 실행하게 해준다.)
E. Controller작성(Controller interface implement) - com.itwill.user.controller 패키지 생성 후 작성
F. properties파일에설정(mapping)	
G. *.jsp작성


1. WEB-INF에 views 폴더 만들고 jsp들을 다 옮긴다.
2. 


